{"version":3,"file":"component---src-templates-tag-js-e7f7feb87d854e47d531.js","mappings":"0KAqDA,UAxCYA,IAAsC,IAArC,KAAEC,EAAI,SAAEC,EAAQ,YAAEC,GAAaH,EACxC,MAAMI,EAAMH,EAAKI,SACXC,EAAQL,EAAKM,aAAaC,MAEhC,OACIC,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACC,EAAAA,EAAQ,CAACT,KAAMA,EAAMC,SAAUA,EAAUS,KAAK,WAC/CF,EAAAA,cAACG,EAAAA,GAAM,KACHH,EAAAA,cAAA,OAAKI,UAAU,aACXJ,EAAAA,cAAA,UAAQI,UAAU,cACdJ,EAAAA,cAAA,UAAKL,EAAIU,MACRV,EAAIW,YAAcN,EAAAA,cAAA,SAAIL,EAAIW,aAAmB,MAElDN,EAAAA,cAAA,WAASI,UAAU,aACdP,EAAMU,IAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAEhBR,EAAAA,cAACU,EAAAA,GAAQ,CAACC,IAAKF,EAAKG,GAAIC,KAAMJ,OAGtCT,EAAAA,cAACc,EAAAA,GAAU,CAACpB,YAAaA,O","sources":["webpack://gatsby-starter-ghost/./src/templates/tag.js"],"sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport { Layout, PostCard, Pagination } from \"../components/common\";\r\nimport { MetaData } from \"../components/common/meta\";\r\n\r\n/**\r\n * Tag page (/tag/:slug)\r\n *\r\n * Loads all posts for the requested tag incl. pagination.\r\n *\r\n */\r\nconst Tag = ({ data, location, pageContext }) => {\r\n    const tag = data.ghostTag;\r\n    const posts = data.allGhostPost.edges;\r\n\r\n    return (\r\n        <>\r\n            <MetaData data={data} location={location} type=\"series\" />\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <header className=\"tag-header\">\r\n                        <h1>{tag.name}</h1>\r\n                        {tag.description ? <p>{tag.description}</p> : null}\r\n                    </header>\r\n                    <section className=\"post-feed\">\r\n                        {posts.map(({ node }) => (\r\n                            // The tag below includes the markup for each post - components/common/PostCard.js\r\n                            <PostCard key={node.id} post={node} />\r\n                        ))}\r\n                    </section>\r\n                    <Pagination pageContext={pageContext} />\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\nTag.propTypes = {\r\n    data: PropTypes.shape({\r\n        ghostTag: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            description: PropTypes.string,\r\n        }),\r\n        allGhostPost: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    pageContext: PropTypes.object,\r\n};\r\n\r\nexport default Tag;\r\n\r\nexport const pageQuery = graphql`\r\n    query GhostTagQuery($slug: String!, $limit: Int!, $skip: Int!) {\r\n        ghostTag(slug: { eq: $slug }) {\r\n            ...GhostTagFields\r\n        }\r\n        allGhostPost(\r\n            sort: { order: DESC, fields: [published_at] }\r\n            filter: { tags: { elemMatch: { slug: { eq: $slug } } } }\r\n            limit: $limit\r\n            skip: $skip\r\n        ) {\r\n            edges {\r\n                node {\r\n                    ...GhostPostFields\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"names":["_ref","data","location","pageContext","tag","ghostTag","posts","allGhostPost","edges","React","MetaData","type","Layout","className","name","description","map","_ref2","node","PostCard","key","id","post","Pagination"],"sourceRoot":""}